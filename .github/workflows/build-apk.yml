name: Build & Release APK
on: workflow_dispatch

env:
  # single place to bump Build Tools
  ANDROID_BUILD_TOOLS: "34.0.0"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_tag: ${{ steps.version.outputs.build_tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: android-actions/setup-android@v3 # installs SDK + licences

      - name: Compute version & tag
        id: version
        shell: bash
        run: |
          base=$(grep -m1 -oE 'versionName +"[0-9.]+"' app/build.gradle | grep -oE '[0-9.]+')
          tag="v${base}-$(date +%Y%m%d%H%M%S)"
          echo "build_tag=$tag" >> "$GITHUB_OUTPUT"
          echo "BUILD_TAG=$tag"  >> "$GITHUB_ENV"
          git config user.email actions@github.com
          git config user.name  "GitHub Actions"
          git tag "$tag" && git push origin "$tag"

      # Build only the thing we need
      - run: ./gradlew :app:assembleRelease --no-daemon --stacktrace

      # Sign and align in one step with apksigner
      - name: Decode keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > upload.jks

      - name: Zip‑align before signing
        run: |
          zipalign -v -p 4 app/build/outputs/apk/release/app-release-unsigned.apk aligned.apk

      - name: Sign with apksigner
        run: |
          apksigner sign --ks upload.jks               \
                         --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
                         --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
                         --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
                         --out app-release.apk aligned.apk

      - uses: actions/upload-artifact@v4
        with:
          name: apk
          path: app-release.apk
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 } # pull the tag again

      - uses: actions/download-artifact@v4
        with: { name: apk, path: dist }

      - run: ls -l dist # sanity check

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.build_tag }}
          name: Release ${{ needs.build.outputs.build_tag }}
          files: dist/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}