name: "Build and Release APK"

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'          # Only trigger when files in the app directory change
      - 'build.gradle'    # Only trigger when build.gradle changes
  workflow_run:
    workflows: ["Sync Upstream"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.7
        with:
          ref: main # Explicitly specify the branch to checkout

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16 # Use Node.js version 16

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11' # You can adjust the Java version if needed
          distribution: 'adopt' # or specify another distribution if needed

      - name: Extract Version from build.gradle
        id: extract_version
        run: |
          VERSION=$(grep 'versionName' app/build.gradle | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "::set-output name=version::${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Set Git User Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create and Push Tag
        id: create_tag
        run: |
          if git rev-parse -q --verify refs/tags/${{ steps.extract_version.outputs.version }}; then
            echo "Tag ${{ steps.extract_version.outputs.version }} already exists."
          else
            git tag ${{ steps.extract_version.outputs.version }}
            git push origin ${{ steps.extract_version.outputs.version }}
          fi

      - name: Build the app
        run: ./gradlew build

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4.3.5
        with:
          name: Release-APK
          path: app/build/outputs/apk/release/app-release-*.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Load VERSION variable
        run: echo "VERSION=${{ needs.build.outputs.VERSION }}" >> $GITHUB_ENV

      - name: Download APK artifact
        uses: actions/download-artifact@v2
        with:
          name: Release-APK
          path: ./release-apk

      - name: Check if Tag Exists
        run: |
          if git rev-parse -q --verify refs/tags/${{ env.VERSION }}; then
            echo "Tag ${{ env.VERSION }} exists."
          else
            echo "Tag ${{ env.VERSION }} does not exist"
            exit 1
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-apk/app-release-*.apk
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}